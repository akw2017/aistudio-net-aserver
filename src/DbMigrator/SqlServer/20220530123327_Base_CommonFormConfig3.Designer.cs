// <auto-generated />
using System;
using Demo.DbMigrator;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DbMigrator.SqlServer
{
    [DbContext(typeof(BaseDbContext))]
    [Migration("20220530123327_Base_CommonFormConfig3")]
    partial class Base_CommonFormConfig3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Coldairarrow.Entity.Base_Manage.Base_Action", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("自然主键");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("CreatorId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("创建人Id");

                    b.Property<string>("CreatorName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("创建人");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit")
                        .HasComment("否已删除");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("图标");

                    b.Property<string>("ModifyId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人Id");

                    b.Property<string>("ModifyName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("修改人");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("权限名/菜单名");

                    b.Property<bool>("NeedAction")
                        .HasColumnType("bit")
                        .HasComment("是否需要权限(仅页面有效)");

                    b.Property<string>("ParentId")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("父级Id");

                    b.Property<int>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.Property<string>("TenantId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("租户Id");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasComment("类型,菜单=0,页面=1,权限=2");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("菜单地址");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("权限值");

                    b.HasKey("Id");

                    b.ToTable("Base_Action");
                });

            modelBuilder.Entity("Coldairarrow.Entity.Base_Manage.Base_AppSecret", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("自然主键");

                    b.Property<string>("AppId")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("应用Id");

                    b.Property<string>("AppName")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("应用名");

                    b.Property<string>("AppSecret")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("应用密钥");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("CreatorId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("创建人Id");

                    b.Property<string>("CreatorName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("创建人");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit")
                        .HasComment("否已删除");

                    b.Property<string>("ModifyId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人Id");

                    b.Property<string>("ModifyName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("修改人");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("TenantId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("租户Id");

                    b.HasKey("Id");

                    b.ToTable("Base_AppSecret");
                });

            modelBuilder.Entity("Coldairarrow.Entity.Base_Manage.Base_CommonFormConfig", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("自然主键");

                    b.Property<string>("BackgroundExpression")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("背景颜色触发公式");

                    b.Property<bool>("CanUserReorder")
                        .HasColumnType("bit")
                        .HasComment("是否可以重排");

                    b.Property<bool>("CanUserResize")
                        .HasColumnType("bit")
                        .HasComment("是否可以调整大小");

                    b.Property<bool>("CanUserSort")
                        .HasColumnType("bit")
                        .HasComment("是否可以排序");

                    b.Property<string>("CellStyle")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("单元格样式，暂未实现");

                    b.Property<int>("ControlType")
                        .HasColumnType("int")
                        .HasComment("控件类型，仅控件框使用");

                    b.Property<string>("Converter")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("转换器");

                    b.Property<string>("ConverterParameter")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("转换参数");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("CreatorId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("创建人Id");

                    b.Property<string>("CreatorName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("创建人");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit")
                        .HasComment("否已删除");

                    b.Property<int>("DisplayIndex")
                        .HasColumnType("int")
                        .HasComment("显示索引");

                    b.Property<string>("ForegroundExpression")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("前景颜色触发公式");

                    b.Property<string>("Header")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("列头");

                    b.Property<string>("HeaderStyle")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("列头样式，赞未实现");

                    b.Property<int>("HorizontalAlignment")
                        .HasColumnType("int")
                        .HasComment("对齐方式 Left = 0,Center = 1,Right = 2,Stretch = 3");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit")
                        .HasComment("只读");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("bit")
                        .HasComment("必输项");

                    b.Property<string>("ItemSource")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("字典名");

                    b.Property<double>("MaxWidth")
                        .HasColumnType("float")
                        .HasComment("最大宽度");

                    b.Property<double>("MinWidth")
                        .HasColumnType("float")
                        .HasComment("最小宽度");

                    b.Property<string>("ModifyId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人Id");

                    b.Property<string>("ModifyName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("修改人");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("PropertyName")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("属性名");

                    b.Property<string>("SortMemberPath")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("排序名");

                    b.Property<string>("StringFormat")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("格式化");

                    b.Property<string>("Table")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("表名");

                    b.Property<string>("TenantId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("租户Id");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasComment("配置类型 查询=0，列表=1");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("默认值");

                    b.Property<int>("Visibility")
                        .HasColumnType("int")
                        .HasComment("是否显示 Visible = 0,Hidden = 1,Collapsed = 2");

                    b.Property<string>("Width")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("列表宽度");

                    b.HasKey("Id");

                    b.ToTable("Base_CommonFormConfig");
                });

            modelBuilder.Entity("Coldairarrow.Entity.Base_Manage.Base_DbLink", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("自然主键");

                    b.Property<string>("ConnectionStr")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("连接字符串");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("CreatorId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("创建人Id");

                    b.Property<string>("CreatorName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("创建人");

                    b.Property<string>("DbType")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("数据库类型");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit")
                        .HasComment("否已删除");

                    b.Property<string>("LinkName")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("连接名");

                    b.Property<string>("ModifyId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人Id");

                    b.Property<string>("ModifyName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("修改人");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("TenantId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("租户Id");

                    b.HasKey("Id");

                    b.ToTable("Base_DbLink");
                });

            modelBuilder.Entity("Coldairarrow.Entity.Base_Manage.Base_Department", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("自然主键");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("CreatorId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("创建人Id");

                    b.Property<string>("CreatorName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("创建人");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit")
                        .HasComment("否已删除");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("ModifyId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人Id");

                    b.Property<string>("ModifyName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("修改人");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("部门名");

                    b.Property<string>("ParentId")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("上级部门Id");

                    b.Property<string>("ParentIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentNames")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenantId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("租户Id");

                    b.HasKey("Id");

                    b.ToTable("Base_Department");
                });

            modelBuilder.Entity("Coldairarrow.Entity.Base_Manage.Base_Dictionary", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("自然主键");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Value相同，使用Code区分，暂时没启用");

                    b.Property<int>("ControlType")
                        .HasColumnType("int")
                        .HasComment("数据类型");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("CreatorId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("创建人Id");

                    b.Property<string>("CreatorName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("创建人");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit")
                        .HasComment("否已删除");

                    b.Property<string>("ModifyId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人Id");

                    b.Property<string>("ModifyName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("修改人");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ParentId")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("父级Id");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("描述");

                    b.Property<int>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.Property<string>("TenantId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("租户Id");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("显示值");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasComment("类型,字典项=0,数据集=1");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("数据值");

                    b.HasKey("Id");

                    b.ToTable("Base_Dictionary");
                });

            modelBuilder.Entity("Coldairarrow.Entity.Base_Manage.Base_Role", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("自然主键");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("CreatorId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("创建人Id");

                    b.Property<string>("CreatorName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("创建人");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit")
                        .HasComment("否已删除");

                    b.Property<string>("ModifyId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人Id");

                    b.Property<string>("ModifyName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("修改人");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("角色名");

                    b.Property<string>("TenantId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("租户Id");

                    b.HasKey("Id");

                    b.ToTable("Base_Role");
                });

            modelBuilder.Entity("Coldairarrow.Entity.Base_Manage.Base_RoleAction", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("自然主键");

                    b.Property<string>("ActionId")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("权限Id");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("CreatorId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("创建人Id");

                    b.Property<string>("CreatorName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("创建人");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit")
                        .HasComment("否已删除");

                    b.Property<string>("ModifyId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人Id");

                    b.Property<string>("ModifyName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("修改人");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("用户Id");

                    b.Property<string>("TenantId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("租户Id");

                    b.HasKey("Id");

                    b.ToTable("Base_RoleAction");
                });

            modelBuilder.Entity("Coldairarrow.Entity.Base_Manage.Base_Test", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("自然主键");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("CreatorId")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("创建人Id");

                    b.Property<string>("CreatorName")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("创建人");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit")
                        .HasComment("否已删除");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("图标");

                    b.Property<string>("ModifyId")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("修改人Id");

                    b.Property<string>("ModifyName")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("修改人");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("权限名/菜单名");

                    b.Property<bool>("NeedTest")
                        .HasColumnType("bit")
                        .HasComment("是否需要权限(仅页面有效)");

                    b.Property<string>("ParentId")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("父级Id");

                    b.Property<int>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.Property<string>("TenantId")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("租户Id");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasComment("类型,菜单=0,页面=1,权限=2");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("菜单地址");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("权限值");

                    b.HasKey("Id");

                    b.ToTable("Base_Test");
                });

            modelBuilder.Entity("Coldairarrow.Entity.Base_Manage.Base_User", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("自然主键");

                    b.Property<string>("Avatar")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2")
                        .HasComment("出生日期");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("CreatorId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("创建人Id");

                    b.Property<string>("CreatorName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("创建人");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit")
                        .HasComment("否已删除");

                    b.Property<string>("DepartmentId")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("所属部门Id");

                    b.Property<string>("ModifyId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人Id");

                    b.Property<string>("ModifyName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("修改人");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("密码");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("RealName")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("姓名");

                    b.Property<int>("Sex")
                        .HasColumnType("int")
                        .HasComment("性别");

                    b.Property<string>("TenantId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("租户Id");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("用户名");

                    b.HasKey("Id");

                    b.ToTable("Base_User");
                });

            modelBuilder.Entity("Coldairarrow.Entity.Base_Manage.Base_UserLog", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("自然主键");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("CreatorId")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("创建人Id");

                    b.Property<string>("CreatorName")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("创建人姓名");

                    b.Property<string>("LogContent")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("日志内容");

                    b.Property<string>("LogType")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("日志类型");

                    b.HasKey("Id");

                    b.ToTable("Base_UserLog");
                });

            modelBuilder.Entity("Coldairarrow.Entity.Base_Manage.Base_UserRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("主键");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("CreatorId")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("创建人Id");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit")
                        .HasComment("否已删除");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("角色Id");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("用户Id");

                    b.HasKey("Id");

                    b.ToTable("Base_UserRole");
                });

            modelBuilder.Entity("Coldairarrow.Entity.D_Manage.D_Notice", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("自然主键");

                    b.Property<string>("AnyId")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Mode=0，对应ALL,Mode=1,对应用户Id,Mode=2,对应角色Id，Mode=3，对应部门Id");

                    b.Property<string>("Appendix")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("附件");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("CreatorId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("创建人Id");

                    b.Property<string>("CreatorName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("创建人");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit")
                        .HasComment("否已删除");

                    b.Property<int>("Mode")
                        .HasColumnType("int")
                        .HasComment("类型=0，全部，=1，发给指定用户，=2，发给指定角色，=3，发给指定部门");

                    b.Property<string>("ModifyId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人Id");

                    b.Property<string>("ModifyName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("修改人");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasComment("状态 =0草稿中，=1已发布，=2撤回");

                    b.Property<string>("TenantId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("租户Id");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("内容");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("标题");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasComment("类型=0，通告");

                    b.HasKey("Id");

                    b.ToTable("D_Notice");
                });

            modelBuilder.Entity("Coldairarrow.Entity.D_Manage.D_NoticeReadingMarks", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("自然主键");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("CreatorId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("创建人Id");

                    b.Property<string>("CreatorName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("创建人");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit")
                        .HasComment("否已删除");

                    b.Property<string>("ModifyId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人Id");

                    b.Property<string>("ModifyName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("修改人");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("NoticeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenantId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("租户Id");

                    b.HasKey("Id");

                    b.ToTable("D_NoticeReadingMarks");
                });

            modelBuilder.Entity("Coldairarrow.Entity.D_Manage.D_UserGroup", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("自然主键");

                    b.Property<string>("Appendix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Avatar")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("CreatorId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("创建人Id");

                    b.Property<string>("CreatorName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("创建人");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit")
                        .HasComment("否已删除");

                    b.Property<string>("ManagerIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManagerNames")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifyId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人Id");

                    b.Property<string>("ModifyName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("修改人");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenantId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("租户Id");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UserIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserNames")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("D_UserGroup");
                });

            modelBuilder.Entity("Coldairarrow.Entity.D_Manage.D_UserMail", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("自然主键");

                    b.Property<string>("Appendix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CCIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CCNames")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("CreatorId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("创建人Id");

                    b.Property<string>("CreatorName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("创建人");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit")
                        .HasComment("否已删除");

                    b.Property<string>("ModifyId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人Id");

                    b.Property<string>("ModifyName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("修改人");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ReadingMarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("StarMark")
                        .HasColumnType("bit");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasComment("状态 =0草稿中，=1已发布，=2撤回");

                    b.Property<string>("TenantId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("租户Id");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UserIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserNames")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("D_UserMail");
                });

            modelBuilder.Entity("Coldairarrow.Entity.D_Manage.D_UserMessage", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("自然主键");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("CreatorId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("创建人Id");

                    b.Property<string>("CreatorName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("创建人");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit")
                        .HasComment("否已删除");

                    b.Property<string>("GroupId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifyId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人Id");

                    b.Property<string>("ModifyName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("修改人");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ReadingMarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasComment("状态 =0草稿中，=1已发送，=2废弃撤回，=3发送失败");

                    b.Property<string>("TenantId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("租户Id");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UserIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserNames")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("D_UserMessage");
                });

            modelBuilder.Entity("Coldairarrow.Entity.OA_Manage.OA_DefForm", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("自然主键");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("CreatorId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("创建人Id");

                    b.Property<string>("CreatorName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("创建人");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit")
                        .HasComment("否已删除");

                    b.Property<string>("JSONId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("JSONVersion")
                        .HasColumnType("int");

                    b.Property<string>("ModifyId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人Id");

                    b.Property<string>("ModifyName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("修改人");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TenantId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("租户Id");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Value")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("权限值");

                    b.Property<string>("WorkflowJSON")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OA_DefForm");
                });

            modelBuilder.Entity("Coldairarrow.Entity.OA_Manage.OA_DefType", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("自然主键");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("CreatorId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("创建人Id");

                    b.Property<string>("CreatorName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("创建人");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit")
                        .HasComment("否已删除");

                    b.Property<string>("ModifyId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人Id");

                    b.Property<string>("ModifyName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("修改人");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TenantId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("租户Id");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("OA_DefType");
                });

            modelBuilder.Entity("Coldairarrow.Entity.OA_Manage.OA_UserForm", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("自然主键");

                    b.Property<string>("AlreadyUserIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AlreadyUserNames")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Appendix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicantDepartment")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ApplicantDepartmentId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ApplicantRole")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ApplicantRoleId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ApplicantUser")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ApplicantUserId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("CreatorId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("创建人Id");

                    b.Property<string>("CreatorName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("创建人");

                    b.Property<string>("CurrentNode")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("DefFormId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DefFormJsonId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("DefFormJsonVersion")
                        .HasColumnType("int");

                    b.Property<string>("DefFormName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit")
                        .HasComment("否已删除");

                    b.Property<DateTime?>("ExpectedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExtendJSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Flag")
                        .HasColumnType("float");

                    b.Property<int>("Grade")
                        .HasColumnType("int");

                    b.Property<string>("ModifyId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人Id");

                    b.Property<string>("ModifyName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("修改人");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("SubType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TenantId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("租户Id");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserNames")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserRoleIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserRoleNames")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OA_UserForm");
                });

            modelBuilder.Entity("Coldairarrow.Entity.OA_Manage.OA_UserFormStep", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("自然主键");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("CreatorId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("创建人Id");

                    b.Property<string>("CreatorName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("创建人");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit")
                        .HasComment("否已删除");

                    b.Property<string>("ModifyId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人Id");

                    b.Property<string>("ModifyName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("修改人");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleNames")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("StepName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenantId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("租户Id");

                    b.Property<string>("UserFormId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("OA_UserFormStep");
                });

            modelBuilder.Entity("Coldairarrow.Entity.Quartz_Manage.Quartz_Task", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("自然主键");

                    b.Property<string>("ApiUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("AuthKey")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AuthValue")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("CreatorId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("创建人Id");

                    b.Property<string>("CreatorName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("创建人");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit")
                        .HasComment("否已删除");

                    b.Property<string>("Describe")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("ForbidEdit")
                        .HasColumnType("bit");

                    b.Property<bool>("ForbidOperate")
                        .HasColumnType("bit");

                    b.Property<string>("GroupName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Interval")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("LastRunTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifyId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人Id");

                    b.Property<string>("ModifyName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("修改人");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("RequestType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TaskName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TenantId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("租户Id");

                    b.HasKey("Id");

                    b.ToTable("Quartz_Task");
                });

            modelBuilder.Entity("WorkflowCore.Persistence.EntityFramework.Models.PersistedEvent", b =>
                {
                    b.Property<long>("PersistenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EventData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EventKey")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EventName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("EventTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsProcessed")
                        .HasColumnType("bit");

                    b.HasKey("PersistenceId");

                    b.ToTable("Event");
                });

            modelBuilder.Entity("WorkflowCore.Persistence.EntityFramework.Models.PersistedExecutionError", b =>
                {
                    b.Property<long>("PersistenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ErrorTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExecutionPointerId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkflowId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PersistenceId");

                    b.ToTable("ExecutionError");
                });

            modelBuilder.Entity("WorkflowCore.Persistence.EntityFramework.Models.PersistedExecutionPointer", b =>
                {
                    b.Property<long>("PersistenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Children")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContextItem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventKey")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EventName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("EventPublished")
                        .HasColumnType("bit");

                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Outcome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersistenceData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PredecessorId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("RetryCount")
                        .HasColumnType("int");

                    b.Property<string>("Scope")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SleepUntil")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("StepId")
                        .HasColumnType("int");

                    b.Property<string>("StepName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("WorkflowId")
                        .HasColumnType("bigint");

                    b.HasKey("PersistenceId");

                    b.HasIndex("WorkflowId");

                    b.ToTable("ExecutionPointer");
                });

            modelBuilder.Entity("WorkflowCore.Persistence.EntityFramework.Models.PersistedExtensionAttribute", b =>
                {
                    b.Property<long>("PersistenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttributeKey")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AttributeValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ExecutionPointerId")
                        .HasColumnType("bigint");

                    b.HasKey("PersistenceId");

                    b.HasIndex("ExecutionPointerId");

                    b.ToTable("ExtensionAttribute");
                });

            modelBuilder.Entity("WorkflowCore.Persistence.EntityFramework.Models.PersistedSubscription", b =>
                {
                    b.Property<long>("PersistenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EventKey")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EventName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ExecutionPointerId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ExternalToken")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ExternalTokenExpiry")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExternalWorkerId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("StepId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SubscribeAsOf")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubscriptionData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SubscriptionId")
                        .HasMaxLength(200)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WorkflowId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("PersistenceId");

                    b.ToTable("Subscription");
                });

            modelBuilder.Entity("WorkflowCore.Persistence.EntityFramework.Models.PersistedWorkflow", b =>
                {
                    b.Property<long>("PersistenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CompleteTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("InstanceId")
                        .HasMaxLength(200)
                        .HasColumnType("uniqueidentifier");

                    b.Property<long?>("NextExecution")
                        .HasColumnType("bigint");

                    b.Property<string>("Reference")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<string>("WorkflowDefinitionId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("PersistenceId");

                    b.ToTable("Workflow");
                });

            modelBuilder.Entity("WorkflowCore.Persistence.EntityFramework.Models.PersistedExecutionPointer", b =>
                {
                    b.HasOne("WorkflowCore.Persistence.EntityFramework.Models.PersistedWorkflow", "Workflow")
                        .WithMany("ExecutionPointers")
                        .HasForeignKey("WorkflowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Workflow");
                });

            modelBuilder.Entity("WorkflowCore.Persistence.EntityFramework.Models.PersistedExtensionAttribute", b =>
                {
                    b.HasOne("WorkflowCore.Persistence.EntityFramework.Models.PersistedExecutionPointer", "ExecutionPointer")
                        .WithMany("ExtensionAttributes")
                        .HasForeignKey("ExecutionPointerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExecutionPointer");
                });

            modelBuilder.Entity("WorkflowCore.Persistence.EntityFramework.Models.PersistedExecutionPointer", b =>
                {
                    b.Navigation("ExtensionAttributes");
                });

            modelBuilder.Entity("WorkflowCore.Persistence.EntityFramework.Models.PersistedWorkflow", b =>
                {
                    b.Navigation("ExecutionPointers");
                });
#pragma warning restore 612, 618
        }
    }
}
